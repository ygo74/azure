---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world-ingress
  annotations:
    # kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    # cert-manager.io/issue-temporary-certificate: "true"
    # acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - testygo.eastus.cloudapp.azure.com
    secretName: tls-secret10
  rules:
  - host: testygo.eastus.cloudapp.azure.com
    http:
      paths:
      - path: /hello-world-one(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: aks-helloworld-one
            port:
              number: 80
      - path: /hello-world-two(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: aks-helloworld-two
            port:
              number: 80
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: aks-helloworld-one
            port:
              number: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hello-world-ingress-static
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     nginx.ingress.kubernetes.io/rewrite-target: /static/$2
#     kubernetes.io/ingress.class: nginx
#     cert-manager.io/cluster-issuer: letsencrypt-staging
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     cert-manager.io/issue-temporary-certificate: "true"
#     acme.cert-manager.io/http01-edit-in-place: "true"
# spec:
#   tls:
#   - hosts:
#     - testygo.eastus.cloudapp.azure.com
#     secretName: tls-secret7
#   rules:
#   - host: testygo.eastus.cloudapp.azure.com
#     http:
#         paths:
#         - path: /static(/|$)(.*)
#           pathType: Prefix
#           backend:
#             service:
#               name: aks-helloworld-one
#               port:
#                 number: 80