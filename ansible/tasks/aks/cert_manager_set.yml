
---
# -----------------------------------------------------------------------------
# Deploy Cert-Manager
# -----------------------------------------------------------------------------
- name: cert_manager_set - Deploy Cert-Manager
  tags:
    - cert_manager
  block:

    - name: cert_manager_set - Get cluster config
      include_tasks: ./tasks/aks/cluster_config_get.yml
      when:
        - _kubeconfig_file_path is not defined

    - name: cert_manager_set - Ceate namespace cert-manager
      kubernetes.core.k8s:
        name:        'cert-manager'
        api_version: 'v1'
        kind:        'Namespace'
        state:       'present'
        kubeconfig:  '{{ _kubeconfig_file_path }}'
        definition:
          metadata:
            labels:
              cert-manager.io/disable-validation: "true"

    - name: cert_manager_set - Add Jetstack repository
      kubernetes.core.helm_repository:
        name:       'jetstack'
        repo_url:   'https://charts.jetstack.io'
        kubeconfig: '{{ _kubeconfig_file_path }}'

    # - name: cert_manager_set - cert_manager_set chart
    #   kubernetes.core.helm:
    #     name:              'cert-manager'
    #     chart_ref:         'jetstack/cert-manager'
    #     release_namespace: 'cert-manager'
    #     kubeconfig:        '{{ _kubeconfig_file_path }}'
    #     set_values:
    #       - value: installCRDs=true
    #         value_type: string
    #       - value: 'nodeSelector.kubernetes.io/os=linux'
    #         value_type: string

    - name: cert_manager_set - Deploy jetstack/cert-manager chart
      ansible.builtin.shell: |
          helm upgrade cert-manager jetstack/cert-manager \
            --install \
            --namespace cert-manager \
            --set installCRDs=true \
            --set nodeSelector."kubernetes\.io/os"=linux \
            --kubeconfig {{ _kubeconfig_file_path }}

          exit 0
      run_once: true
      delegate_to: localhost
      failed_when:
        - '"STATUS: deployed" not in _helm_result.stdout_lines'
      changed_when:
        - '"STATUS: deployed" in _helm_result.stdout_lines'
      register: _helm_result


    - name: cert_manager_set - Display chart installation result
      debug:
        msg: '{{ _helm_result.stdout_lines }}'

    - name: cert_manager_set - Get a list of all pods from cert-manager namespace
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: cert-manager
        kubeconfig: '{{ _kubeconfig_file_path }}'
      register: _cert_manager_pods_list

    - name: cert_manager_set - Assert pods exist
      assert:
        that:
          - _cert_manager_pods_list.resources | length > 0
        fail_msg: No node exist in the cluster

    - name: cert_manager_set - Deploy cluster issuer
      kubernetes.core.k8s:
        state:       'present'
        kubeconfig:  '{{ _kubeconfig_file_path }}'
        template:    'aksbootstrap/cluster_issuer.yml.j2'
