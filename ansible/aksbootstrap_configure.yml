- name: Create Azure Kubernetes Service
  hosts: aks
  collections:
    - azure.azcollection
  vars:

    # Define database users to be deployed
    postgresql_users:
      - name:     'XXXXX'
        password: 'XXXXX'

  vars_files:
    - ./vault/applications.yml

  tasks:

    - name: Get cluster config
      tags:
        - always
      include_tasks: ./tasks/aks/cluster_config_get.yml
      when:
        - _kubeconfig_file_path is not defined


    - name: Include tasks to deploy persistent volumes
      tags:
        - always
      ansible.builtin.include_tasks: ./tasks/aks/persistent_volumes_set.yml
      vars:
        _persistent_volume_name:                  '{{ persistent_volume_item.name }}'
        _persistent_volume_size:                  '{{ persistent_volume_item.size }}'
        _persistent_volume_source_kind:           '{{ persistent_volume_item.source.kind }}'
        _persistent_volume_source_name:           '{{ persistent_volume_item.source.name }}'
        _persistent_volume_source_resource_group: '{{ persistent_volume_item.source.resource_group }}'
        _persistent_volume_namespace:             '{{ persistent_volume_item.namespace }}'
        _persistent_volume_labels:                '{{ persistent_volume_item.name }}'
        _persistent_volume_claim_name:            '{{ persistent_volume_item.claim_name }}'

      loop: '{{ persistent_volumes | default([]) }}'

      loop_control:
        loop_var: persistent_volume_item
        label: '{{ persistent_volume_item.name }}'

    - name: Deploy postgresql
      block:
        - name: Deploy postgresql - Add bitnami repository
          kubernetes.core.helm_repository:
            name:       'bitnami'
            repo_url:   'https://charts.bitnami.com/bitnami'
            kubeconfig: '{{ _kubeconfig_file_path }}'


        - name: Deploy postgresql - Deploy postgresql chart
          ansible.builtin.shell: |
              helm upgrade postgresql bitnami/postgresql \
                --install \
                --namespace postgresql \
                --set primary.persistence.existingClaim=pvc-postgresql-dyninv \
                --set volumePermissions.enabled=true \
                --set global.postgresql.auth.postgresPassword={{ aksbootstrap_postgresql_admin_password }} \
                --kubeconfig {{ _kubeconfig_file_path }} \
                -f ./templates/{{ cluster_name | lower }}/postgres_initdb.yml

              exit 0
          run_once: true
          delegate_to: localhost
          failed_when:
            - '"STATUS: deployed" not in _helm_result.stdout_lines'
          changed_when:
            - '"STATUS: deployed" in _helm_result.stdout_lines'
          register: _helm_result


    - name: Deploy postgresql - Display chart installation result
      debug:
        msg: '{{ _helm_result.stdout_lines }}'

    - name: Deploy postgresql - Get a list of all pods from postgresql namespace
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: postgresql
        kubeconfig: '{{ _kubeconfig_file_path }}'
      register: _postgresql_pods_list

    - name: Deploy postgresql - Assert pods exist
      assert:
        that:
          - _postgresql_pods_list.resources | length > 0
        fail_msg: No postgresql pod exist in the cluster
